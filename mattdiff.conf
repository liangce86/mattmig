# migDiff Configuration.

######################### Global config #########################

# 日志级别，可以设置为 info、debug
log-level = "info"

# 对每一个 chunk 的数据进行对比。使用 chunk-size 设置 chunk 的大小
chunk-size = 100000

# 检查数据的线程数量
check-thread-count = 4

# 抽样检查的比例，如果设置为 100 则检查全部数据
sample-percent = 20 

# 通过计算 chunk 的 checksum 来对比数据，如果不开启则逐行对比数据
use-checksum = true

# 如果设置为 true 则只会通过计算 checksum 来校验数据，如果上下游的 checksum 不一致也不会查出数据再进行校验
only-use-checksum = false

# 是否使用上次校验的 checkpoint，如果开启，则只校验上次未校验以及校验失败的 chunk
use-checkpoint = false

# 不对比数据
ignore-data-check = false

# 不对比表结构
ignore-struct-check = false


######################### Tables config #########################


# 配置需要对比的*目标数据库*中的表
[[check-tables]]
    # 目标库中数据库的名称
       schema = "bainian"
       schema = 'mmm'

    # 需要检查的表
    # tables = ["usertb",]

    # 支持使用正则表达式配置检查的表，需要以‘~’开始，
    # 下面的配置会检查所有表名以‘test’为前缀的表
    # tables = ["~^test.*"]
    # 下面的配置会检查配置库中所有的表
      tables = ["~^"]



######################### Databases config #########################

# 源数据库实例的配置
[[source-db]]
    host = "192.168.0.82"
    port = 3306
    user = "root"
    password = "jys#123"
    # 源数据库实例的 id，唯一标识一个数据库实例
    instance-id = "node2"

# 目标数据库实例的配置
[target-db]
    host = "192.168.0.101"
    port = 3306
    user = "root"
    password = "jys#12345678"
